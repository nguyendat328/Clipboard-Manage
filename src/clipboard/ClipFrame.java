/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package clipboard;

import java.awt.Dimension;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import java.awt.Font;
import java.awt.Toolkit;
import java.util.ArrayDeque;
import java.util.Deque;
import java.util.Enumeration;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JSlider;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.TableColumnModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

import javax.swing.*;
import java.awt.*;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import javax.swing.event.MouseInputAdapter;
import javax.swing.event.MouseInputListener;

/**
 *
 * @author choco
 */
public class ClipFrame extends javax.swing.JFrame implements ClipboardListener.EntryListener {

    static final Dimension MAIN_DEMENTION = new Dimension(300, 570);

    DefaultTableModel clipBoardTableModel;
    Deque<String> arrayDeque = new ArrayDeque<String>();

    public ClipFrame() {
        initComponents();

        clipBoardTableModel = (DefaultTableModel) mainTable.getModel();
        initFontSize(mainTable);
        initFontSize(btnClear);

        ClipboardListener listener = new ClipboardListener();
        listener.setEntryListener(this);
        listener.start();
        // showTable(arrayDeque);

    }

    @Override
    public void onCopy(String data) {
        arrayDeque.push(data);
        if (arrayDeque.size() > 30) {
            arrayDeque.removeLast();
        }
        showTable(arrayDeque);
    }

    public void showTable(Deque<String> list) {
        try {
            clipBoardTableModel.setRowCount(0);
            for (String lts : list) {
                clipBoardTableModel.addRow(new Object[]{
                    lts
                });
            }
        } catch (Exception e) {
            System.out.println("showTable error:");
            e.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mainTable = new javax.swing.JTable();
        panelSlider = new javax.swing.JPanel();
        sliderSize = new javax.swing.JSlider();
        panelClear = new javax.swing.JPanel();
        btnClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Clipboard by Datnt");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(153, 153, 153));
        setLocationByPlatform(true);
        setMaximumSize(new java.awt.Dimension(2147483647, 570));
        setPreferredSize(new java.awt.Dimension(300, 570));

        mainPanel.setBackground(new java.awt.Color(102, 102, 102));
        mainPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "History", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 1, 18), new java.awt.Color(255, 255, 255))); // NOI18N
        mainPanel.setPreferredSize(new java.awt.Dimension(300, 460));
        mainPanel.setLayout(new javax.swing.BoxLayout(mainPanel, javax.swing.BoxLayout.LINE_AXIS));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(300, 420));

        mainTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        mainTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mainTableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mainTableMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                mainTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(mainTable);

        mainPanel.add(jScrollPane1);

        panelSlider.setMaximumSize(new java.awt.Dimension(32767, 40));
        panelSlider.setMinimumSize(new java.awt.Dimension(20, 40));
        panelSlider.setName(""); // NOI18N
        panelSlider.setPreferredSize(new java.awt.Dimension(150, 40));
        panelSlider.setRequestFocusEnabled(false);
        panelSlider.setVerifyInputWhenFocusTarget(false);
        panelSlider.setLayout(new java.awt.GridLayout(1, 1));

        sliderSize.setMaximum(32);
        sliderSize.setMinimum(14);
        sliderSize.setMinorTickSpacing(2);
        sliderSize.setPaintLabels(true);
        sliderSize.setToolTipText("SizeChange");
        sliderSize.setValue(16);
        sliderSize.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sliderSize.setMaximumSize(new java.awt.Dimension(20000, 40));
        sliderSize.setMinimumSize(new java.awt.Dimension(20, 40));
        sliderSize.setOpaque(true);
        sliderSize.setPreferredSize(new java.awt.Dimension(150, 40));
        sliderSize.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderSizeStateChanged(evt);
            }
        });
        panelSlider.add(sliderSize);

        panelClear.setMaximumSize(new java.awt.Dimension(32767, 40));
        panelClear.setMinimumSize(new java.awt.Dimension(20, 40));
        panelClear.setName(""); // NOI18N
        panelClear.setPreferredSize(new java.awt.Dimension(150, 40));
        panelClear.setRequestFocusEnabled(false);
        panelClear.setVerifyInputWhenFocusTarget(false);
        panelClear.setLayout(new java.awt.GridLayout(1, 0));

        btnClear.setText("Clear");
        btnClear.setMaximumSize(new java.awt.Dimension(20000, 40));
        btnClear.setMinimumSize(new java.awt.Dimension(20, 40));
        btnClear.setOpaque(true);
        btnClear.setPreferredSize(new java.awt.Dimension(150, 40));
        btnClear.setRequestFocusEnabled(false);
        btnClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClearMouseClicked(evt);
            }
        });
        panelClear.add(btnClear);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(panelSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, 0)
                    .addComponent(panelClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(panelSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelClear, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sliderSizeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderSizeStateChanged
        JSlider source = (JSlider) evt.getSource();
        if (!source.getValueIsAdjusting()) {
            int value = source.getValue();
            changeFontSize(mainTable, value);
            if (value > 24) {
                changeFontSize(btnClear, 24);
            } else {
                changeFontSize(btnClear, value);
            }

        }
    }//GEN-LAST:event_sliderSizeStateChanged

    private void mainTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainTableMouseClicked

    }//GEN-LAST:event_mainTableMouseClicked

    private void btnClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearMouseClicked
        arrayDeque.removeAll(arrayDeque);
        showTable(arrayDeque);
    }//GEN-LAST:event_btnClearMouseClicked

    private void mainTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainTableMousePressed
        try {
            if (SwingUtilities.isLeftMouseButton(evt)) {
                int i = mainTable.getSelectedRow();
                if (i >= 0) {
                    //  System.out.println("inint: " + System.currentTimeMillis());
                    String data = clipBoardTableModel.getValueAt(i, 0).toString();
                    // System.out.println("copy done: " + System.currentTimeMillis());
                    arrayDeque.removeFirstOccurrence(data);
                    //  System.out.println("remove done: " + System.currentTimeMillis());
                    copyToClipboard(data);
                    //  System.out.println("to clip done: " + System.currentTimeMillis());
                    showTable(arrayDeque);
                    // System.out.println("show table done: " + System.currentTimeMillis());
                }
            }
        } catch (Exception e) {
            System.out.println("mainTableMousePressed error:");
            e.printStackTrace();
        }
    }//GEN-LAST:event_mainTableMousePressed

    private void mainTableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainTableMouseEntered
        try {
            int row = mainTable.rowAtPoint(evt.getPoint());
            System.out.println(row);
            mainTable.clearSelection();
            mainTable.setRowSelectionInterval(row, row);
        } catch (Exception e) {
            System.out.println("mainTableMouseEntered error:");
            e.printStackTrace();
        }
    }//GEN-LAST:event_mainTableMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClipFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClipFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClipFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClipFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClipFrame().setVisible(true);
            }
        });
    }

    public static void displayJFrame() {
        ClipFrame lts = new ClipFrame();
        lts.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        lts.setPreferredSize(MAIN_DEMENTION);

        lts.setLocationRelativeTo(null);
        lts.pack();
        lts.setVisible(true);
    }

    private void initFontSize(JLabel label) {
        int initSize = sliderSize.getValue();
        label.setFont(new Font("SansSerif", Font.PLAIN, initSize));

    }

    public void copyToClipboard(String value) {
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        StringSelection data = new StringSelection(value);
        clipboard.setContents(data, data);
    }

    private void initFontSize(JButton label) {
        int initSize = sliderSize.getValue();
        label.setFont(new Font("SansSerif", Font.PLAIN, initSize));
    }

    private void initFontSize(JTable table) {
        int initSize = sliderSize.getValue();
        table.setFont(new Font("SansSerif", Font.PLAIN, initSize));
        table.setRowHeight(initSize + 60);
    }

    private void changeFontSize(JLabel label, int value) {
        label.setFont(new Font(label.getFont().getFamily(), label.getFont().getStyle(), value));
    }

    private void changeFontSize(JButton label, int value) {
        label.setFont(new Font(label.getFont().getFamily(), label.getFont().getStyle(), value));
    }

    private void changeFontSize(JTable label, int value) {
        label.setFont(new Font(label.getFont().getFamily(), label.getFont().getStyle(), value));
        int height = 60 + value;
        label.setRowHeight(height);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTable mainTable;
    private javax.swing.JPanel panelClear;
    private javax.swing.JPanel panelSlider;
    private javax.swing.JSlider sliderSize;
    // End of variables declaration//GEN-END:variables
}
